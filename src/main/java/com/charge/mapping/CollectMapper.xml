<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.charge.dao.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.charge.model.Collect" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="INFO" property="info" jdbcType="VARCHAR" />
    <result column="IS_DONE" property="isDone" jdbcType="BIT" />
    <result column="RESULT" property="result" jdbcType="VARCHAR" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, CREATE_TIME, UPDATE_TIME, USERNAME, INFO, IS_DONE, RESULT, OPERATOR
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.charge.model.CollectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_collect
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_collect
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.charge.model.CollectExample" >
    delete from sys_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charge.model.Collect" >
    insert into sys_collect (ID, CREATE_TIME, UPDATE_TIME, 
      USERNAME, INFO, IS_DONE, 
      RESULT, OPERATOR)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{username,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, #{isDone,jdbcType=BIT}, 
      #{result,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.charge.model.Collect" >
    insert into sys_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="info != null" >
        INFO,
      </if>
      <if test="isDone != null" >
        IS_DONE,
      </if>
      <if test="result != null" >
        RESULT,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="isDone != null" >
        #{isDone,jdbcType=BIT},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charge.model.CollectExample" resultType="java.lang.Integer" >
    select count(*) from sys_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_collect
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.username != null" >
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null" >
        INFO = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.isDone != null" >
        IS_DONE = #{record.isDone,jdbcType=BIT},
      </if>
      <if test="record.result != null" >
        RESULT = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null" >
        OPERATOR = #{record.operator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_collect
    set ID = #{record.id,jdbcType=BIGINT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      INFO = #{record.info,jdbcType=VARCHAR},
      IS_DONE = #{record.isDone,jdbcType=BIT},
      RESULT = #{record.result,jdbcType=VARCHAR},
      OPERATOR = #{record.operator,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.charge.model.Collect" >
    update sys_collect
    <set >
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="info != null" >
        INFO = #{info,jdbcType=VARCHAR},
      </if>
      <if test="isDone != null" >
        IS_DONE = #{isDone,jdbcType=BIT},
      </if>
      <if test="result != null" >
        RESULT = #{result,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.charge.model.Collect" >
    update sys_collect
    set CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      USERNAME = #{username,jdbcType=VARCHAR},
      INFO = #{info,jdbcType=VARCHAR},
      IS_DONE = #{isDone,jdbcType=BIT},
      RESULT = #{result,jdbcType=VARCHAR},
      OPERATOR = #{operator,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <!--获取所有电桩采集列表信息-->
  <select id="selectAllCollect" resultMap="BaseResultMap"  >
    select
    *
    from sys_collect
  </select>

</mapper>